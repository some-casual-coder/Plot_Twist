from pydantic import BaseModel, Field, HttpUrl
from typing import List, Optional


class StoryTurn(BaseModel):
    scenario_text: str = Field(...,
                               description="The text of the scenario presented to the user.")
    chosen_action: str = Field(...,
                               description="The action the user took after this scenario.")


class NextScenarioRequest(BaseModel):
    daily_mystery_id: int = Field(...,
                                  description="ID of the current daily mystery.")

    path_so_far: List[StoryTurn] = Field(
        default_factory=list,
        description="List of scenarios presented and actions chosen by the user so far."
    )
    current_user_choice: str = Field(...,
                                     description="The immediate action chosen by the user.")
    last_presented_scenario_text: Optional[str] = Field(
        None,
        description="The text of the scenario from which the current_user_choice was made. If path_so_far is empty, this should be the base_story_text."
    )


class NextScenarioResponse(BaseModel):
    next_scenario_text: str = Field(...,
                                    description="The new scenario text generated by the AI.")
    next_scenario_image_url: Optional[HttpUrl] = Field(
        None, description="Mock image URL for the new scenario.")
    next_choices: List[str] = Field(
        ..., description="Three new choices for the player based on the new scenario.")
    current_round_generated: int = Field(
        ..., description="The round number for which this scenario was generated (1-indexed).")
    is_final_round: bool = Field(
        ..., description="True if this is the 5th and final round, meaning a solution is presented.")
    solution_explanation: Optional[str] = Field(
        None, description="The explanation of the mystery's solution (only if is_final_round is true).")
